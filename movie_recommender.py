{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "abd3b8c5-0689-4ff1-8f2c-1bdac326bd8e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'page': 1, 'results': [{'adult': False, 'backdrop_path': '/op3qmNhvwEvyT7UFyPbIfQmKriB.jpg', 'genre_ids': [14, 12, 28], 'id': 324544, 'original_language': 'en', 'original_title': 'In the Lost Lands', 'overview': 'A queen sends the powerful and feared sorceress Gray Alys to the ghostly wilderness of the Lost Lands in search of a magical power, where the sorceress and her guide, the drifter Boyce must outwit and outfight man and demon.', 'popularity': 789.8905, 'poster_path': '/dDlfjR7gllmr8HTeN6rfrYhTdwX.jpg', 'release_date': '2025-02-27', 'title': 'In the Lost Lands', 'video': False, 'vote_average': 6.372, 'vote_count': 164}, {'adult': False, 'backdrop_path': '/2Nti3gYAX513wvhp8IiLL6ZDyOm.jpg', 'genre_ids': [10751, 35, 12, 14], 'id': 950387, 'original_language': 'en', 'original_title': 'A Minecraft Movie', 'overview': \"Four misfits find themselves struggling with ordinary problems when they are suddenly pulled through a mysterious portal into the Overworld: a bizarre, cubic wonderland that thrives on imagination. To get back home, they'll have to master this world while embarking on a magical quest with an unexpected, expert crafter, Steve.\", 'popularity': 699.0444, 'poster_path': '/yFHHfHcUgGAxziP1C3lLt0q2T4s.jpg', 'release_date': '2025-03-31', 'title': 'A Minecraft Movie', 'video': False, 'vote_average': 6.086, 'vote_count': 538}, {'adult': False, 'backdrop_path': '/k32XKMjmXMGeydykD32jfER3BVI.jpg', 'genre_ids': [28, 9648, 18], 'id': 1045938, 'original_language': 'en', 'original_title': 'G20', 'overview': 'After the G20 Summit is overtaken by terrorists, President Danielle Sutton must bring all her statecraft and military experience to defend her family and her fellow leaders.', 'popularity': 687.7088, 'poster_path': '/tSee9gbGLfqwvjoWoCQgRZ4Sfky.jpg', 'release_date': '2025-04-09', 'title': 'G20', 'video': False, 'vote_average': 6.547, 'vote_count': 203}, {'adult': False, 'backdrop_path': '/sNx1A3822kEbqeUxvo5A08o4N7o.jpg', 'genre_ids': [28, 35, 53], 'id': 1195506, 'original_language': 'en', 'original_title': 'Novocaine', 'overview': 'When the girl of his dreams is kidnapped, everyman Nate turns his inability to feel pain into an unexpected strength in his fight to get her back.', 'popularity': 551.0521, 'poster_path': '/xmMHGz9dVRaMY6rRAlEX4W0Wdhm.jpg', 'release_date': '2025-03-12', 'title': 'Novocaine', 'video': False, 'vote_average': 6.873, 'vote_count': 408}, {'adult': False, 'backdrop_path': '/zksO4lVnRKRoaSYzh2EDn2Z3Pel.jpg', 'genre_ids': [37, 28], 'id': 1293286, 'original_language': 'en', 'original_title': 'Gunslingers', 'overview': 'When the most wanted man in America surfaces in a small Kentucky town, his violent history -- and a blood-thirsty mob seeking vengeance and a king’s ransom -- soon follow. As brothers face off against one another and bullets tear the town to shreds, this lightning-fast gunslinger makes his enemies pay the ultimate price for their greed.', 'popularity': 474.7791, 'poster_path': '/O7REXWPANWXvX2jhQydHjAq2DV.jpg', 'release_date': '2025-04-11', 'title': 'Gunslingers', 'video': False, 'vote_average': 6.4, 'vote_count': 15}, {'adult': False, 'backdrop_path': '/ce3prrjh9ZehEl5JinNqr4jIeaB.jpg', 'genre_ids': [28, 53, 878], 'id': 822119, 'original_language': 'en', 'original_title': 'Captain America: Brave New World', 'overview': 'After meeting with newly elected U.S. President Thaddeus Ross, Sam finds himself in the middle of an international incident. He must discover the reason behind a nefarious global plot before the true mastermind has the entire world seeing red.', 'popularity': 360.3738, 'poster_path': '/pzIddUEMWhWzfvLI3TwxUG2wGoi.jpg', 'release_date': '2025-02-12', 'title': 'Captain America: Brave New World', 'video': False, 'vote_average': 6.1, 'vote_count': 1356}, {'adult': False, 'backdrop_path': '/fTrQsdMS2MUw00RnzH0r3JWHhts.jpg', 'genre_ids': [28, 80, 53], 'id': 1197306, 'original_language': 'en', 'original_title': 'A Working Man', 'overview': \"Levon Cade left behind a decorated military career in the black ops to live a simple life working construction. But when his boss's daughter, who is like family to him, is taken by human traffickers, his search to bring her home uncovers a world of corruption far greater than he ever could have imagined.\", 'popularity': 262.4491, 'poster_path': '/6FRFIogh3zFnVWn7Z6zcYnIbRcX.jpg', 'release_date': '2025-03-26', 'title': 'A Working Man', 'video': False, 'vote_average': 6.347, 'vote_count': 238}, {'adult': False, 'backdrop_path': '/gsQJOfeW45KLiQeEIsom94QPQwb.jpg', 'genre_ids': [28, 53], 'id': 1125899, 'original_language': 'en', 'original_title': 'Cleaner', 'overview': \"When a group of radical activists take over an energy company's annual gala, seizing 300 hostages, an ex-soldier turned window cleaner suspended 50 storeys up on the outside of the building must save those trapped inside, including her younger brother.\", 'popularity': 216.346, 'poster_path': '/mwzDApMZAGeYCEVjhegKvCzDX0W.jpg', 'release_date': '2025-02-19', 'title': 'Cleaner', 'video': False, 'vote_average': 6.549, 'vote_count': 204}, {'adult': False, 'backdrop_path': '/is9bmV6uYXu7LjZGJczxrjJDlv8.jpg', 'genre_ids': [28, 12], 'id': 1229730, 'original_language': 'fr', 'original_title': 'Carjackers', 'overview': \"By day, they're invisible—valets, hostesses, and bartenders at a luxury hotel. By night, they're the Carjackers, a crew of skilled drivers who track and rob wealthy clients on the road. As they plan their ultimate heist, the hotel director hires a ruthless hitman, to stop them at all costs. With danger closing in, can Nora, Zoe, Steve, and Prestance pull off their biggest score yet?\", 'popularity': 192.6822, 'poster_path': '/wbkPMTz2vVai7Ujyp0ag7AM9SrO.jpg', 'release_date': '2025-03-27', 'title': 'Carjackers', 'video': False, 'vote_average': 6.303, 'vote_count': 122}, {'adult': False, 'backdrop_path': '/fzv87rT0jlAkh5Uf9PpIlUj6Nj8.jpg', 'genre_ids': [28, 53, 80], 'id': 1195585, 'original_language': 'en', 'original_title': 'The Hard Hit', 'overview': 'An Interpol agent hunting the head of a global crime syndicate tracks his target to Las Vegas, but when the criminal organization kills his wife and daughter, he goes above the law to get his revenge.', 'popularity': 191.0852, 'poster_path': '/whkFbOZTamHeugEG95jvQehSzAH.jpg', 'release_date': '2023-10-20', 'title': 'The Hard Hit', 'video': False, 'vote_average': 7.4, 'vote_count': 15}, {'adult': False, 'backdrop_path': '/lqHt4icP1GTaNBeVTxTrwTZdoAW.jpg', 'genre_ids': [28, 53, 9648, 80], 'id': 1195430, 'original_language': 'hi', 'original_title': 'देवा', 'overview': 'Dev Ambre, a ruthless cop, loses his memory in an accident just after he has finished solving a murder case and now has to reinvestigate it while keeping his memory loss a secret from everyone except DCP Farhan Khan.', 'popularity': 185.8479, 'poster_path': '/qxtXzAlEPxmjHILU8k8wduvBSdo.jpg', 'release_date': '2025-01-31', 'title': 'Deva', 'video': False, 'vote_average': 5.9, 'vote_count': 41}, {'adult': False, 'backdrop_path': '/zo8CIjJ2nfNOevqNajwMRO6Hwka.jpg', 'genre_ids': [16, 12, 10751, 35], 'id': 1241982, 'original_language': 'en', 'original_title': 'Moana 2', 'overview': \"After receiving an unexpected call from her wayfinding ancestors, Moana journeys alongside Maui and a new crew to the far seas of Oceania and into dangerous, long-lost waters for an adventure unlike anything she's ever faced.\", 'popularity': 183.3054, 'poster_path': '/aLVkiINlIeCkcZIzb7XHzPYgO6L.jpg', 'release_date': '2024-11-21', 'title': 'Moana 2', 'video': False, 'vote_average': 7.09, 'vote_count': 2209}, {'adult': False, 'backdrop_path': '/hNA73rnG4PjSwgojaC2gbO1f8Rt.jpg', 'genre_ids': [878, 35, 12], 'id': 696506, 'original_language': 'en', 'original_title': 'Mickey 17', 'overview': 'Unlikely hero Mickey Barnes finds himself in the extraordinary circumstance of working for an employer who demands the ultimate commitment to the job… to die, for a living.', 'popularity': 176.5143, 'poster_path': '/edKpE9B5qN3e559OuMCLZdW1iBZ.jpg', 'release_date': '2025-02-28', 'title': 'Mickey 17', 'video': False, 'vote_average': 6.922, 'vote_count': 1512}, {'adult': False, 'backdrop_path': '/1w8kutrRucTd3wlYyu5QlUDMiG1.jpg', 'genre_ids': [12, 10751, 16], 'id': 762509, 'original_language': 'en', 'original_title': 'Mufasa: The Lion King', 'overview': 'Mufasa, a cub lost and alone, meets a sympathetic lion named Taka, the heir to a royal bloodline. The chance meeting sets in motion an expansive journey of a group of misfits searching for their destiny.', 'popularity': 164.3402, 'poster_path': '/lurEK87kukWNaHd0zYnsi3yzJrs.jpg', 'release_date': '2024-12-18', 'title': 'Mufasa: The Lion King', 'video': False, 'vote_average': 7.426, 'vote_count': 1958}, {'adult': False, 'backdrop_path': '/cJCW78MZsyyXBKHo4V25WctK00V.jpg', 'genre_ids': [27, 28, 14], 'id': 1312833, 'original_language': 'en', 'original_title': \"A Knight's War\", 'overview': 'A fearless knight braves a deadly realm to save the Chosen One’s soul. Facing witches, demons, and brutal foes, he discovers her return could ignite chaos and doom humanity.', 'popularity': 164.2983, 'poster_path': '/janjdSMrTRGtPrI1p9uOX66jv7x.jpg', 'release_date': '2025-02-07', 'title': \"A Knight's War\", 'video': False, 'vote_average': 5.5, 'vote_count': 9}, {'adult': False, 'backdrop_path': '/wmqpE7p2dUCEgCnovuovoNXaCXr.jpg', 'genre_ids': [27, 14, 53, 9648, 28], 'id': 1353117, 'original_language': 'en', 'original_title': 'Home Sweet Home: Rebirth', 'overview': 'When a city is overrun with a demonically-possessed crowd, a cop must find the source of evil to save his family.', 'popularity': 161.6344, 'poster_path': '/9rCBCm9cyI4JfLEhx3EncyncMR3.jpg', 'release_date': '2025-03-20', 'title': 'Home Sweet Home: Rebirth', 'video': False, 'vote_average': 6.938, 'vote_count': 24}, {'adult': False, 'backdrop_path': '/ibF5XVxTzf1ayzZrmiJqgeQ39Qk.jpg', 'genre_ids': [28, 10752], 'id': 1373723, 'original_language': 'en', 'original_title': 'The Codes of War', 'overview': 'War stories about family, ethics and honor include the true story of two U.S. Marines who in a span of six seconds, must stand their ground to stop a suicide truck bomb, a Navy Corpsman who attempts to hold on to his humanity, and a WW2 soldier who gets separated from his squad and is forced to re-evaluate his code.', 'popularity': 156.6159, 'poster_path': '/oXeiQAfRK90pxxhP5iKPXQqAIN1.jpg', 'release_date': '2025-03-20', 'title': 'The Codes of War', 'video': False, 'vote_average': 6.3, 'vote_count': 54}, {'adult': False, 'backdrop_path': '/zOpe0eHsq0A2NvNyBbtT6sj53qV.jpg', 'genre_ids': [28, 878, 35, 10751, 12, 14], 'id': 939243, 'original_language': 'en', 'original_title': 'Sonic the Hedgehog 3', 'overview': 'Sonic, Knuckles, and Tails reunite against a powerful new adversary, Shadow, a mysterious villain with powers unlike anything they have faced before. With their abilities outmatched in every way, Team Sonic must seek out an unlikely alliance in hopes of stopping Shadow and protecting the planet.', 'popularity': 154.0315, 'poster_path': '/d8Ryb8AunYAuycVKDp5HpdWPKgC.jpg', 'release_date': '2024-12-19', 'title': 'Sonic the Hedgehog 3', 'video': False, 'vote_average': 7.7, 'vote_count': 2414}, {'adult': False, 'backdrop_path': '/o5vasl0xbZWWKQnAlaBTSgntHH2.jpg', 'genre_ids': [27], 'id': 1208808, 'original_language': 'es', 'original_title': 'Turno nocturno', 'overview': 'A young nurse with a domestic abuse past starts working the night shift at a small hospital, where, during the night, the ghost of a nurse materializes.', 'popularity': 145.105, 'poster_path': '/iSSx9Bys64vlOkvkyKXtp19P7Re.jpg', 'release_date': '2024-10-31', 'title': 'Turno nocturno', 'video': False, 'vote_average': 6.49, 'vote_count': 97}, {'adult': False, 'backdrop_path': '/qiVrapzgrDO7c6yQTSvn0dhwsn8.jpg', 'genre_ids': [10749, 18], 'id': 1252309, 'original_language': 'es', 'original_title': 'Pídeme lo que quieras', 'overview': \"After his father's death, Eric Zimmerman travels to Spain to oversee his company's branches. In Madrid, he falls for Judith and engage in an intense, erotic relationship full of exploration. However, Eric fears his secret may end their affair.\", 'popularity': 143.4567, 'poster_path': '/76qnVxU2rPdVvipBN3DPQH6fVYB.jpg', 'release_date': '2024-11-29', 'title': 'Ask Me What You Want', 'video': False, 'vote_average': 5.9, 'vote_count': 144}], 'total_pages': 49764, 'total_results': 995265}\n",
      "   adult                     backdrop_path            genre_ids       id  \\\n",
      "0  False  /op3qmNhvwEvyT7UFyPbIfQmKriB.jpg         [14, 12, 28]   324544   \n",
      "1  False  /2Nti3gYAX513wvhp8IiLL6ZDyOm.jpg  [10751, 35, 12, 14]   950387   \n",
      "2  False  /k32XKMjmXMGeydykD32jfER3BVI.jpg       [28, 9648, 18]  1045938   \n",
      "3  False  /sNx1A3822kEbqeUxvo5A08o4N7o.jpg         [28, 35, 53]  1195506   \n",
      "4  False  /zksO4lVnRKRoaSYzh2EDn2Z3Pel.jpg             [37, 28]  1293286   \n",
      "\n",
      "  original_language     original_title  \\\n",
      "0                en  In the Lost Lands   \n",
      "1                en  A Minecraft Movie   \n",
      "2                en                G20   \n",
      "3                en          Novocaine   \n",
      "4                en        Gunslingers   \n",
      "\n",
      "                                            overview  popularity  \\\n",
      "0  A queen sends the powerful and feared sorceres...    789.8905   \n",
      "1  Four misfits find themselves struggling with o...    699.0444   \n",
      "2  After the G20 Summit is overtaken by terrorist...    687.7088   \n",
      "3  When the girl of his dreams is kidnapped, ever...    551.0521   \n",
      "4  When the most wanted man in America surfaces i...    474.7791   \n",
      "\n",
      "                        poster_path release_date              title  video  \\\n",
      "0  /dDlfjR7gllmr8HTeN6rfrYhTdwX.jpg   2025-02-27  In the Lost Lands  False   \n",
      "1  /yFHHfHcUgGAxziP1C3lLt0q2T4s.jpg   2025-03-31  A Minecraft Movie  False   \n",
      "2  /tSee9gbGLfqwvjoWoCQgRZ4Sfky.jpg   2025-04-09                G20  False   \n",
      "3  /xmMHGz9dVRaMY6rRAlEX4W0Wdhm.jpg   2025-03-12          Novocaine  False   \n",
      "4   /O7REXWPANWXvX2jhQydHjAq2DV.jpg   2025-04-11        Gunslingers  False   \n",
      "\n",
      "   vote_average  vote_count  \n",
      "0         6.372         164  \n",
      "1         6.086         538  \n",
      "2         6.547         203  \n",
      "3         6.873         408  \n",
      "4         6.400          15  \n"
     ]
    }
   ],
   "source": [
    "import requests\n",
    "import pandas as pd\n",
    "\n",
    "# Your API key from TMDb\n",
    "api_key = 'e4166f47199a72210bb5d01b22d596d8'  # Replace with your actual API key\n",
    "\n",
    "# Define the base URL for the API request\n",
    "url = f'https://api.themoviedb.org/3/movie/popular?api_key={api_key}&language=en-US&page=1'\n",
    "\n",
    "# Make a request to the API\n",
    "response = requests.get(url)\n",
    "\n",
    "# Print the entire response content for debugging\n",
    "print(response.json())  # This will help you see what the API returns\n",
    "\n",
    "# If the 'results' key is present, convert it into a DataFrame\n",
    "data = response.json()\n",
    "if 'results' in data:\n",
    "    movies_df = pd.DataFrame(data['results'])\n",
    "    print(movies_df.head())\n",
    "else:\n",
    "    print(\"No 'results' key found in the API response.\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "a49cab12-2fcf-4f92-8fb9-4d4cbd403357",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "               Title                                           Overview  \\\n",
      "0  In the Lost Lands  A queen sends the powerful and feared sorceres...   \n",
      "1  A Minecraft Movie  Four misfits find themselves struggling with o...   \n",
      "2                G20  After the G20 Summit is overtaken by terrorist...   \n",
      "3          Novocaine  When the girl of his dreams is kidnapped, ever...   \n",
      "4        Gunslingers  When the most wanted man in America surfaces i...   \n",
      "\n",
      "  Release Date  Vote Average  Popularity                       Poster Path  \n",
      "0   2025-02-27         6.372    789.8905  /dDlfjR7gllmr8HTeN6rfrYhTdwX.jpg  \n",
      "1   2025-03-31         6.086    699.0444  /yFHHfHcUgGAxziP1C3lLt0q2T4s.jpg  \n",
      "2   2025-04-09         6.547    687.7088  /tSee9gbGLfqwvjoWoCQgRZ4Sfky.jpg  \n",
      "3   2025-03-12         6.873    551.0521  /xmMHGz9dVRaMY6rRAlEX4W0Wdhm.jpg  \n",
      "4   2025-04-11         6.400    474.7791   /O7REXWPANWXvX2jhQydHjAq2DV.jpg  \n"
     ]
    }
   ],
   "source": [
    "import requests\n",
    "import pandas as pd\n",
    "\n",
    "# Your API key from TMDb\n",
    "api_key = 'e4166f47199a72210bb5d01b22d596d8'  # Replace with your actual API key\n",
    "\n",
    "# Define the base URL for the API request\n",
    "url = f'https://api.themoviedb.org/3/movie/popular?api_key={api_key}&language=en-US&page=1'\n",
    "\n",
    "# Make a request to the API\n",
    "response = requests.get(url)\n",
    "\n",
    "# Convert the response to JSON\n",
    "data = response.json()\n",
    "\n",
    "# Check if 'results' key exists\n",
    "if 'results' in data:\n",
    "    # Extract the relevant movie details\n",
    "    movies_data = []\n",
    "    for movie in data['results']:\n",
    "        movie_details = {\n",
    "            'Title': movie['title'],\n",
    "            'Overview': movie['overview'],\n",
    "            'Release Date': movie['release_date'],\n",
    "            'Vote Average': movie['vote_average'],\n",
    "            'Popularity': movie['popularity'],\n",
    "            'Poster Path': movie['poster_path']\n",
    "        }\n",
    "        movies_data.append(movie_details)\n",
    "    \n",
    "    # Create a DataFrame from the extracted movie details\n",
    "    movies_df = pd.DataFrame(movies_data)\n",
    "    \n",
    "    # Display the first few rows\n",
    "    print(movies_df.head())\n",
    "    \n",
    "    # Optionally save it to a CSV file\n",
    "    movies_df.to_csv('movies.csv', index=False)\n",
    "else:\n",
    "    print(\"No 'results' key found in the API response.\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "c4e0015e-53d3-4f5c-9f6d-d1479f908ce5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Title   In the Lost Lands  A Minecraft Movie       G20  Novocaine  \\\n",
      "User_1           3.845548           4.100551  4.983564   3.095147   \n",
      "User_2           3.337911           4.699428  4.221919   3.536339   \n",
      "User_3           4.152704           3.892832  4.410951   4.555346   \n",
      "User_4           3.189505           3.521979  4.737193   4.253451   \n",
      "User_5           4.150857           3.493703  3.886111   3.948033   \n",
      "\n",
      "Title   Gunslingers  Captain America: Brave New World  A Working Man  \\\n",
      "User_1     3.954576                          3.255778       4.451784   \n",
      "User_2     4.065788                          3.410294       3.978681   \n",
      "User_3     3.234935                          4.693971       4.831219   \n",
      "User_4     4.354363                          4.172710       3.717989   \n",
      "User_5     3.286274                          4.665449       3.768558   \n",
      "\n",
      "Title    Cleaner  Carjackers  The Hard Hit      Deva   Moana 2  Mickey 17  \\\n",
      "User_1  4.349327    3.485749      3.854358  4.192062  3.781783   3.177111   \n",
      "User_2  4.928913    3.616565      3.628276  3.679299  3.939580   3.995423   \n",
      "User_3  4.245703    3.458676      3.000115  4.461329  4.159162   3.743156   \n",
      "User_4  4.891301    4.671947      3.296549  3.950428  4.028888   3.198461   \n",
      "User_5  3.355808    4.353349      4.736129  4.284660  3.717570   3.334802   \n",
      "\n",
      "Title   Mufasa: The Lion King  A Knight's War  Home Sweet Home: Rebirth  \\\n",
      "User_1               3.239316        3.945577                  4.570467   \n",
      "User_2               3.590870        3.199534                  3.734935   \n",
      "User_3               4.338643        4.517719                  4.843738   \n",
      "User_4               3.571568        3.962886                  3.244416   \n",
      "User_5               3.621183        3.677433                  4.871008   \n",
      "\n",
      "Title   The Codes of War  Sonic the Hedgehog 3  Turno nocturno  \\\n",
      "User_1          3.010104              3.165472        4.128501   \n",
      "User_2          3.606076              3.001310        4.903731   \n",
      "User_3          3.173134              3.224529        4.096874   \n",
      "User_4          4.673090              4.864796        3.853362   \n",
      "User_5          4.869420              3.120659        3.111657   \n",
      "\n",
      "Title   Ask Me What You Want  \n",
      "User_1              3.933250  \n",
      "User_2              3.770388  \n",
      "User_3              3.830882  \n",
      "User_4              3.536337  \n",
      "User_5              4.451097  \n"
     ]
    }
   ],
   "source": [
    "# Let's simulate user ratings based on the vote_average\n",
    "movies_df['rating'] = movies_df['Vote Average'] / 2  # Normalizing to a scale of 1-5\n",
    "\n",
    "# Create a pivot table to simulate a ratings matrix (users as rows, movies as columns)\n",
    "# For this example, we’ll assume 10 \"users\" and assign them random ratings.\n",
    "import numpy as np\n",
    "import random\n",
    "\n",
    "# Simulate some users (we will create a random user base for simplicity)\n",
    "num_users = 10\n",
    "users = [f\"User_{i+1}\" for i in range(num_users)]\n",
    "\n",
    "# Create a dictionary with random ratings for each user and movie\n",
    "rating_matrix = pd.DataFrame(index=users, columns=movies_df['Title'], dtype=float)\n",
    "\n",
    "for user in rating_matrix.index:\n",
    "    for movie in rating_matrix.columns:\n",
    "        # Assign a random rating between 3 and 5 (to simulate positive ratings)\n",
    "        rating_matrix.loc[user, movie] = random.uniform(3, 5)\n",
    "\n",
    "# Display the rating matrix\n",
    "print(rating_matrix.head())\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "6cc585ad-46d1-494f-9c75-697edd35938a",
   "metadata": {},
   "outputs": [],
   "source": [
    "movie_titles = movies_df['Title'].tolist()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "7b8206fa-023f-42ac-998e-f06ad9613155",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "               title                                           overview  \\\n",
      "0  In the Lost Lands  A queen sends the powerful and feared sorceres...   \n",
      "1  A Minecraft Movie  Four misfits find themselves struggling with o...   \n",
      "2                G20  After the G20 Summit is overtaken by terrorist...   \n",
      "3          Novocaine  When the girl of his dreams is kidnapped, ever...   \n",
      "4        Gunslingers  When the most wanted man in America surfaces i...   \n",
      "\n",
      "  release_date  vote_average  popularity                       poster_path  \n",
      "0   2025-02-27         6.372    789.8905  /dDlfjR7gllmr8HTeN6rfrYhTdwX.jpg  \n",
      "1   2025-03-31         6.086    699.0444  /yFHHfHcUgGAxziP1C3lLt0q2T4s.jpg  \n",
      "2   2025-04-09         6.547    687.7088  /tSee9gbGLfqwvjoWoCQgRZ4Sfky.jpg  \n",
      "3   2025-03-12         6.873    551.0521  /xmMHGz9dVRaMY6rRAlEX4W0Wdhm.jpg  \n",
      "4   2025-04-11         6.400    474.7791   /O7REXWPANWXvX2jhQydHjAq2DV.jpg  \n"
     ]
    }
   ],
   "source": [
    "import requests\n",
    "import pandas as pd\n",
    "\n",
    "# Your TMDB API key\n",
    "api_key = 'e4166f47199a72210bb5d01b22d596d8'\n",
    "\n",
    "# Endpoint to get popular movies\n",
    "url = f'https://api.themoviedb.org/3/movie/popular?api_key={api_key}&language=en-US&page=1'\n",
    "\n",
    "# Send GET request to TMDB API\n",
    "response = requests.get(url)\n",
    "data = response.json()\n",
    "\n",
    "# Convert to DataFrame\n",
    "movies_df = pd.DataFrame(data['results'])\n",
    "\n",
    "# Keep only relevant columns\n",
    "movies_df = movies_df[['title', 'overview', 'release_date', 'vote_average', 'popularity', 'poster_path']]\n",
    "\n",
    "# Preview\n",
    "print(movies_df.head())\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "095b2e2c-b638-4283-bb76-f85125a19a06",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>In the Lost Lands</th>\n",
       "      <th>A Minecraft Movie</th>\n",
       "      <th>G20</th>\n",
       "      <th>Novocaine</th>\n",
       "      <th>Gunslingers</th>\n",
       "      <th>Captain America: Brave New World</th>\n",
       "      <th>A Working Man</th>\n",
       "      <th>Cleaner</th>\n",
       "      <th>Carjackers</th>\n",
       "      <th>The Hard Hit</th>\n",
       "      <th>Deva</th>\n",
       "      <th>Moana 2</th>\n",
       "      <th>Mickey 17</th>\n",
       "      <th>Mufasa: The Lion King</th>\n",
       "      <th>A Knight's War</th>\n",
       "      <th>Home Sweet Home: Rebirth</th>\n",
       "      <th>The Codes of War</th>\n",
       "      <th>Sonic the Hedgehog 3</th>\n",
       "      <th>Turno nocturno</th>\n",
       "      <th>Ask Me What You Want</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>User_1</th>\n",
       "      <td>4.754469</td>\n",
       "      <td>4.908191</td>\n",
       "      <td>4.204288</td>\n",
       "      <td>3.507279</td>\n",
       "      <td>3.476718</td>\n",
       "      <td>3.566361</td>\n",
       "      <td>3.645146</td>\n",
       "      <td>4.573753</td>\n",
       "      <td>4.433282</td>\n",
       "      <td>3.057409</td>\n",
       "      <td>3.781825</td>\n",
       "      <td>4.982081</td>\n",
       "      <td>4.113270</td>\n",
       "      <td>3.182087</td>\n",
       "      <td>3.170351</td>\n",
       "      <td>4.776827</td>\n",
       "      <td>4.929285</td>\n",
       "      <td>4.480914</td>\n",
       "      <td>3.581195</td>\n",
       "      <td>4.062203</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>User_2</th>\n",
       "      <td>4.152230</td>\n",
       "      <td>4.516744</td>\n",
       "      <td>3.005057</td>\n",
       "      <td>4.174957</td>\n",
       "      <td>3.298878</td>\n",
       "      <td>4.222850</td>\n",
       "      <td>3.139441</td>\n",
       "      <td>3.546339</td>\n",
       "      <td>4.743864</td>\n",
       "      <td>4.087616</td>\n",
       "      <td>4.090528</td>\n",
       "      <td>3.163175</td>\n",
       "      <td>3.787945</td>\n",
       "      <td>4.397097</td>\n",
       "      <td>3.787639</td>\n",
       "      <td>3.205086</td>\n",
       "      <td>3.477828</td>\n",
       "      <td>4.724796</td>\n",
       "      <td>3.161348</td>\n",
       "      <td>4.560259</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>User_3</th>\n",
       "      <td>3.444773</td>\n",
       "      <td>4.863432</td>\n",
       "      <td>3.396039</td>\n",
       "      <td>4.998437</td>\n",
       "      <td>3.717541</td>\n",
       "      <td>3.934659</td>\n",
       "      <td>3.915454</td>\n",
       "      <td>3.732111</td>\n",
       "      <td>3.396537</td>\n",
       "      <td>3.266628</td>\n",
       "      <td>3.426129</td>\n",
       "      <td>4.880660</td>\n",
       "      <td>3.604616</td>\n",
       "      <td>4.891694</td>\n",
       "      <td>3.772407</td>\n",
       "      <td>4.909724</td>\n",
       "      <td>4.962691</td>\n",
       "      <td>4.784550</td>\n",
       "      <td>3.539643</td>\n",
       "      <td>4.210912</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>User_4</th>\n",
       "      <td>4.748884</td>\n",
       "      <td>4.909142</td>\n",
       "      <td>4.962808</td>\n",
       "      <td>3.366905</td>\n",
       "      <td>4.090179</td>\n",
       "      <td>4.689931</td>\n",
       "      <td>4.818818</td>\n",
       "      <td>3.576295</td>\n",
       "      <td>3.014453</td>\n",
       "      <td>3.532312</td>\n",
       "      <td>4.822776</td>\n",
       "      <td>4.956188</td>\n",
       "      <td>4.948738</td>\n",
       "      <td>4.480299</td>\n",
       "      <td>4.822906</td>\n",
       "      <td>3.040667</td>\n",
       "      <td>4.799180</td>\n",
       "      <td>3.911432</td>\n",
       "      <td>4.651538</td>\n",
       "      <td>3.242664</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>User_5</th>\n",
       "      <td>3.941789</td>\n",
       "      <td>4.951910</td>\n",
       "      <td>3.260837</td>\n",
       "      <td>4.408985</td>\n",
       "      <td>4.940815</td>\n",
       "      <td>4.658059</td>\n",
       "      <td>4.907976</td>\n",
       "      <td>3.233199</td>\n",
       "      <td>4.694623</td>\n",
       "      <td>3.418117</td>\n",
       "      <td>3.043961</td>\n",
       "      <td>3.298737</td>\n",
       "      <td>3.653877</td>\n",
       "      <td>4.434601</td>\n",
       "      <td>4.687569</td>\n",
       "      <td>3.542182</td>\n",
       "      <td>4.166880</td>\n",
       "      <td>4.060045</td>\n",
       "      <td>3.063954</td>\n",
       "      <td>4.052275</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        In the Lost Lands  A Minecraft Movie       G20  Novocaine  \\\n",
       "User_1           4.754469           4.908191  4.204288   3.507279   \n",
       "User_2           4.152230           4.516744  3.005057   4.174957   \n",
       "User_3           3.444773           4.863432  3.396039   4.998437   \n",
       "User_4           4.748884           4.909142  4.962808   3.366905   \n",
       "User_5           3.941789           4.951910  3.260837   4.408985   \n",
       "\n",
       "        Gunslingers  Captain America: Brave New World  A Working Man  \\\n",
       "User_1     3.476718                          3.566361       3.645146   \n",
       "User_2     3.298878                          4.222850       3.139441   \n",
       "User_3     3.717541                          3.934659       3.915454   \n",
       "User_4     4.090179                          4.689931       4.818818   \n",
       "User_5     4.940815                          4.658059       4.907976   \n",
       "\n",
       "         Cleaner  Carjackers  The Hard Hit      Deva   Moana 2  Mickey 17  \\\n",
       "User_1  4.573753    4.433282      3.057409  3.781825  4.982081   4.113270   \n",
       "User_2  3.546339    4.743864      4.087616  4.090528  3.163175   3.787945   \n",
       "User_3  3.732111    3.396537      3.266628  3.426129  4.880660   3.604616   \n",
       "User_4  3.576295    3.014453      3.532312  4.822776  4.956188   4.948738   \n",
       "User_5  3.233199    4.694623      3.418117  3.043961  3.298737   3.653877   \n",
       "\n",
       "        Mufasa: The Lion King  A Knight's War  Home Sweet Home: Rebirth  \\\n",
       "User_1               3.182087        3.170351                  4.776827   \n",
       "User_2               4.397097        3.787639                  3.205086   \n",
       "User_3               4.891694        3.772407                  4.909724   \n",
       "User_4               4.480299        4.822906                  3.040667   \n",
       "User_5               4.434601        4.687569                  3.542182   \n",
       "\n",
       "        The Codes of War  Sonic the Hedgehog 3  Turno nocturno  \\\n",
       "User_1          4.929285              4.480914        3.581195   \n",
       "User_2          3.477828              4.724796        3.161348   \n",
       "User_3          4.962691              4.784550        3.539643   \n",
       "User_4          4.799180              3.911432        4.651538   \n",
       "User_5          4.166880              4.060045        3.063954   \n",
       "\n",
       "        Ask Me What You Want  \n",
       "User_1              4.062203  \n",
       "User_2              4.560259  \n",
       "User_3              4.210912  \n",
       "User_4              3.242664  \n",
       "User_5              4.052275  "
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "movie_titles = movies_df['title'].tolist()  # Note the capital T\n",
    "\n",
    "# Generate mock ratings\n",
    "import numpy as np\n",
    "ratings_matrix = pd.DataFrame(\n",
    "    data=np.random.uniform(3, 5, size=(5, len(movie_titles))),\n",
    "    index=[f'User_{i+1}' for i in range(5)],\n",
    "    columns=movie_titles\n",
    ")\n",
    "\n",
    "ratings_matrix\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "a3977ba5-2e90-4efb-bdaf-a6af0681db70",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Normalize the ratings by subtracting the mean rating of each user\n",
    "normalized_ratings = ratings_matrix.subtract(ratings_matrix.mean(axis=1), axis=0)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "576239dd-bcdd-40d3-b2b5-b3058d6c96a4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-1 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: #000;\n",
       "  --sklearn-color-text-muted: #666;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-1 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-1 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-1 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: flex;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "  align-items: start;\n",
       "  justify-content: space-between;\n",
       "  gap: 0.5em;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 label.sk-toggleable__label .caption {\n",
       "  font-size: 0.6rem;\n",
       "  font-weight: lighter;\n",
       "  color: var(--sklearn-color-text-muted);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"▸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"▾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-1 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-1 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-1 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-1 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-1 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 0.5em;\n",
       "  text-align: center;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-1 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-1 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>NearestNeighbors(algorithm=&#x27;brute&#x27;, metric=&#x27;cosine&#x27;)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow\"><div><div>NearestNeighbors</div></div><div><a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.6/modules/generated/sklearn.neighbors.NearestNeighbors.html\">?<span>Documentation for NearestNeighbors</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></div></label><div class=\"sk-toggleable__content fitted\"><pre>NearestNeighbors(algorithm=&#x27;brute&#x27;, metric=&#x27;cosine&#x27;)</pre></div> </div></div></div></div>"
      ],
      "text/plain": [
       "NearestNeighbors(algorithm='brute', metric='cosine')"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.neighbors import NearestNeighbors\n",
    "\n",
    "# Initialize the Nearest Neighbors model\n",
    "knn = NearestNeighbors(metric='cosine', algorithm='brute')\n",
    "\n",
    "# Fit the model on the normalized ratings matrix\n",
    "knn.fit(normalized_ratings.T)  # Transpose to get movies as rows\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "f4504f60-d2e5-436d-bf36-f136cb20b6e5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Recommended Movies: Index(['In the Lost Lands', 'G20', 'Novocaine', 'A Minecraft Movie',\n",
      "       'Gunslingers'],\n",
      "      dtype='object')\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\SHAKHSHAM RAWAT\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\sklearn\\utils\\validation.py:2739: UserWarning: X does not have valid feature names, but NearestNeighbors was fitted with feature names\n",
      "  warnings.warn(\n"
     ]
    }
   ],
   "source": [
    "from sklearn.neighbors import NearestNeighbors\n",
    "\n",
    "# Initialize NearestNeighbors with brute force algorithm and cosine similarity\n",
    "knn = NearestNeighbors(n_neighbors=5, algorithm='brute', metric='cosine')\n",
    "\n",
    "# Fit the model on your ratings data (assuming normalized_ratings is already created)\n",
    "knn.fit(normalized_ratings)\n",
    "\n",
    "# Example: Find similar movies to a movie with the title \"In the Lost Lands\"\n",
    "movie_index = ratings_matrix.columns.get_loc(\"In the Lost Lands\")\n",
    "movie_ratings = normalized_ratings.iloc[movie_index].values.reshape(1, -1)\n",
    "\n",
    "# Get the nearest neighbors (similar movies)\n",
    "distances, indices = knn.kneighbors(movie_ratings, n_neighbors=5)\n",
    "\n",
    "# Display the recommended movies based on similarity\n",
    "recommended_movies = ratings_matrix.columns[indices.flatten()]\n",
    "print(\"Recommended Movies:\", recommended_movies)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "9f7d09df-d8e6-475a-95b7-445642e6f5a5",
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "invalid syntax (1632387081.py, line 1)",
     "output_type": "error",
     "traceback": [
      "\u001b[1;36m  Cell \u001b[1;32mIn[30], line 1\u001b[1;36m\u001b[0m\n\u001b[1;33m    streamlit run movie_recommender.py\u001b[0m\n\u001b[1;37m              ^\u001b[0m\n\u001b[1;31mSyntaxError\u001b[0m\u001b[1;31m:\u001b[0m invalid syntax\n"
     ]
    }
   ],
   "source": [
    "streamlit run movie_recommender.py\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": None,
   "id": "1b42c479-30ed-4d60-b901-4eb93b2c3e14",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.13.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
import streamlit as st
import requests

# Function to fetch genres from the TMDB API
def fetch_genres():
    api_key = 'e4166f47199a72210bb5d01b22d596d8'
    url = f'https://api.themoviedb.org/3/genre/movie/list?api_key={api_key}&language=en-US'
    response = requests.get(url)
    genres = response.json()['genres']
    return genres

# Function to fetch movies based on selected genre
def fetch_movies_by_genre(genre_id):
    api_key = 'e4166f47199a72210bb5d01b22d596d8'
    url = f'https://api.themoviedb.org/3/discover/movie?api_key={api_key}&with_genres={genre_id}&language=en-US&sort_by=popularity.desc&page=1'
    response = requests.get(url)
    return response.json()

# Streamlit app title
st.title("Movie Recommendation App")

# Fetch the genres list
genres = fetch_genres()

# Create a dropdown for genre selection
genre_names = [genre['name'] for genre in genres]
genre_ids = [genre['id'] for genre in genres]

selected_genre = st.selectbox('Select a Genre', genre_names)

# Get the ID of the selected genre
selected_genre_id = genre_ids[genre_names.index(selected_genre)]

# Fetch and display the top 10 movies for the selected genre
if selected_genre:
    st.write(f"Showing top 10 movies for the genre: {selected_genre}")

    # Fetch movies of the selected genre
    movie_data = fetch_movies_by_genre(selected_genre_id)

    # Loop through the top 10 movies and display their details
    for movie in movie_data['results'][:10]:
        st.subheader(movie['title'])  # Movie Title
        st.write(movie['overview'])  # Movie Overview
        st.image(f"https://image.tmdb.org/t/p/w500{movie['poster_path']}", caption=movie['title'])  # Movie Poster

